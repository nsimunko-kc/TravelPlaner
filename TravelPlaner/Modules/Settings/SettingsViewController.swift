//
//  SettingsViewController.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 14/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import MRProgress
import GoogleSignIn

final class SettingsViewController: UIViewController {

    // MARK: - Private properties -
    
    // MARK: - Public properties -
    
    var presenter: SettingsPresenterInterface!

    // MARK: - IBOutlets -
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter.viewDidLoad()
        
        _configureUI()
    }

    // MARK: - IBActions -

    // MARK: - Private functions -
    
    fileprivate func _configureUI() {
        navigationItem.title = "Moje postavke"
        navigationItem.rightBarButtonItem?.tintColor = UIColor.white
        navigationController?.navigationBar.barTintColor = UIColor.appLightBlue()
        navigationController?.navigationBar.titleTextAttributes = [NSForegroundColorAttributeName: UIColor.white]
    }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
}

// MARK: - Extensions -

extension SettingsViewController: SettingsViewInterface {
    
    func reloadData() {
        MRProgressOverlayView.showOverlayAdded(to: self.view, animated: true)
        tableView.reloadData()
        MRProgressOverlayView.dismissOverlay(for: self.view, animated: true)
    }
    
}

extension SettingsViewController: TabBarItemConfigurable {
    func tabBarItemTitle() -> String {
        return "Postavke"
    }
    
    func tabBarItemDeselectedImageName() -> String {
        return "ic_settings"
    }
    
    func tabBarItemSelectedImageName() -> String {
        return "ic_settings"
    }
}

extension SettingsViewController: UITableViewDataSource, UITableViewDelegate {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return presenter.numberOfSections()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.numberOfRows(in: section)
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let item = presenter.item(at: indexPath)
        
        switch item {
        case .info:
            let cell: SettingsInfoCell = tableView.dequeueReusableCell(withIdentifier: Constants.ReuseIdentifiers.TableViewCells.SettingsInfoCell, for: indexPath) as! SettingsInfoCell
            cell.configure(with: GIDSignIn.sharedInstance().currentUser.profile.name)
            return cell
        case .clearPlans:
            let cell: UITableViewCell = tableView.dequeueReusableCell(withIdentifier: Constants.ReuseIdentifiers.TableViewCells.SettingsActionCell, for: indexPath)
            cell.textLabel?.text = "Obriši spremljene planove"
            return cell
        case .clearLocations:
            let cell: UITableViewCell = tableView.dequeueReusableCell(withIdentifier: Constants.ReuseIdentifiers.TableViewCells.SettingsActionCell, for: indexPath)
            cell.textLabel?.text = "Obriši spremljene lokacije"
            return cell
        case .logout:
            let cell: UITableViewCell = tableView.dequeueReusableCell(withIdentifier: Constants.ReuseIdentifiers.TableViewCells.SettingsLogoutCell, for: indexPath)
            return cell
        }
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        presenter.didSelectItem(at: indexPath)
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 44.0
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 0.001
    }
    
    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        guard let item = SettingsItem(rawValue: section) else {
            return nil
        }
        
        switch item {
        case .info:
            return "O meni"
        case .clearLocations, .clearPlans:
            return "Brisanje podataka"
        case .logout:
            return "Odjava"
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if indexPath.section == SettingsItem.info.rawValue {
            return 65.0
        } else {
            return 44.0
        }
    }
    
}
