//
//  LoginViewController.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 17/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import GoogleSignIn
import GoogleAPIClientForREST

final class LoginViewController: UIViewController {

    // MARK: - Private properties -
    
    fileprivate let _scopes = [kGTLRAuthScopeCalendar]
    fileprivate let _service = GTLRCalendarService()
    fileprivate let _signInButton = GIDSignInButton()
    
    // MARK: - Public properties -
    
    var presenter: LoginPresenterInterface!

    // MARK: - IBOutlets -
    
    @IBOutlet weak var signInButtonContainerView: UIView!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Configure Google Sign-in.
        GIDSignIn.sharedInstance().delegate = self
        GIDSignIn.sharedInstance().uiDelegate = self
        GIDSignIn.sharedInstance().scopes = _scopes
        GIDSignIn.sharedInstance().signInSilently()
        
        signInButtonContainerView.addSubview(_signInButton)
        _signInButton.center = signInButtonContainerView.convert(signInButtonContainerView.center, from: signInButtonContainerView.superview)
    }

    // MARK: - IBActions -

    // MARK: - Private functions -
}

// MARK: - Extensions -

extension LoginViewController: LoginViewInterface {
}

extension LoginViewController: GIDSignInDelegate {
    
    func sign(_ signIn: GIDSignIn!, didSignInFor user: GIDGoogleUser!, withError error: Error!) {
        if let error = error {
            self._service.authorizer = nil
            presenter.didFailToSignIn(withError: error)
        } else {
            presenter.didSignIn()
        }
    }
    
}

extension LoginViewController: GIDSignInUIDelegate {
    
    
}
