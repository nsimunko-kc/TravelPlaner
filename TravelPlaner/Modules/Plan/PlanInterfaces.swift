//
//  PlanInterfaces.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 18/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Alamofire

// MARK: - Navigation -

enum PlanNavigationAction {
    case back
}

// MARK: - Plan Wireframe Interface -

protocol PlanWireframeInterface: WireframeInterface {
    func performNavigationAction(action: PlanNavigationAction)
    func configureModuleWithViewController(viewController: PlanViewController)
}

// MARK: - Plan View Interface -

protocol PlanViewInterface: ViewInterface, Progressable {
    func reloadData()
    func reloadData(at indexPaths: [IndexPath])
}

// MARK: - Plan Presenter Interface -

protocol PlanPresenterInterface: PresenterInterface {
    func didSelectNavigationAction(action: PlanNavigationAction)
    func numberOfSections() -> Int
    func numberOfItems(in section: Int) -> Int
    func item(for indexPath: IndexPath) -> PlanItem
    func locations() -> [String]
    func didSetPlanDates(start: Date, end: Date)
    func didSetPlanLocation(_ location: String)
    func didTapSavePlanButton()
}

// MARK: - Plan Interactor Interface -

protocol PlanInteractorInterface: InteractorInterface {
    func loadLocations() -> [String]?
    func getForecast(_ location: String, completion: @escaping ((Result<(OpenWeatherMapForecastResponse)>) -> ()))
    func getImages(_ location: String, completion: @escaping ((Result<(GettyImagesGalleryResponse)>) -> ()))
    func save(plan: BasicPlanInfoItem) -> Bool
}
