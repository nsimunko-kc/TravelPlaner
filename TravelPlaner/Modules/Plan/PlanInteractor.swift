//
//  PlanInteractor.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 18/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Alamofire
import UnboxedAlamofire

final class PlanInteractor: NSObject {

    // MARK: - Private functions -
    
}

// MARK: - Extensions -

extension PlanInteractor: PlanInteractorInterface {
    
    func loadLocations() -> [String]? {
        return UserDefaults.standard.stringArray(forKey: Constants.UserDefaultsKeys.FavoriteLocations)
    }
    
    func getForecast(_ location: String, completion: @escaping ((Result<(OpenWeatherMapForecastResponse)>) -> ())) {
        Alamofire.request(Router.weatherForecast(location: location)).debugLog().responseObject { (response: DataResponse<OpenWeatherMapForecastResponse>) in
            switch response.result {
            case let .success(result):
                print("API call - getForecast: Success")
                completion(.success(result))
            case let .failure(error):
                print("API call - getForecast: Failure")
                print(error.localizedDescription)
                completion(.failure(error))
            }
        }
    }
    
    func getImages(_ location: String, completion: @escaping ((Result<(GettyImagesGalleryResponse)>) -> ())) {
        Alamofire.request(Router.images(location: location)).debugLog().responseObject { (response: DataResponse<GettyImagesGalleryResponse>) in
            switch response.result {
            case let .success(result):
                print("API call - getImages: Success")
                completion(.success(result))
            case let .failure(error):
                print("API call - getImages: Failure")
                print(error.localizedDescription)
                completion(.failure(error))
            }
        }
    }
    
}
