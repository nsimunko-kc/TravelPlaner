//
//  PlanViewController.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 18/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class PlanViewController: UIViewController {

    // MARK: - Private properties -
    
    // MARK: - Public properties -
    
    var presenter: PlanPresenterInterface!

    // MARK: - IBOutlets -
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        _configureUI()
    }

    // MARK: - IBActions -
    
    @IBAction func didTapSavePlanButton(_ sender: UIButton) {
        
    }

    // MARK: - Private functions -
    
    fileprivate func _configureUI() {
        navigationController?.navigationBar.tintColor = UIColor.white
        navigationItem.title = "Novi plan"
    }
}

// MARK: - Extensions -

extension PlanViewController: PlanViewInterface {
}

extension PlanViewController: UITableViewDelegate, UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return presenter.numberOfSections()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.numberOfItems(in: section)
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let item = presenter.item(for: indexPath)
        let cell: UITableViewCell
        let cellIdentifier: String
        
        switch item {
        case .dateItem:
            cellIdentifier = Constants.ReuseIdentifiers.TableViewCells.PlanDateCell
            cell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) as! PlanDateCell
        case .locationItem:
            cellIdentifier = Constants.ReuseIdentifiers.TableViewCells.PlanLocationCell
            cell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) as! PlanLocationCell
        case .forecastItem:
            cellIdentifier = Constants.ReuseIdentifiers.TableViewCells.PlanForecastCell
            cell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) as! PlanForecastCell
        case .galleryItem:
            cellIdentifier = Constants.ReuseIdentifiers.TableViewCells.PlanGalleryCell
            cell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) as! PlanGalleryCell
        }
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return section == 0 ? 44.0 : 0.001
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        let item = presenter.item(for: indexPath)
        
        switch item {
        case .dateItem:
            return 114.0
        case .locationItem:
            return 82.0
        case .forecastItem:
            return 108.0
        case .galleryItem:
            return 153.0
        }
    }
    
}
