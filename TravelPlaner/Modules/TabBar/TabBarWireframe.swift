//
//  TabBarWireframe.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 14/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

struct TabBarContext {
}

final class TabBarWireframe: NSObject {
    
    // MARK: - Private properties -

    fileprivate var _context: TabBarContext?
    fileprivate let _storyboard: UIStoryboard = UIStoryboard(name: Constants.StoryboardIdentifiers.TabBar, bundle: nil)
    fileprivate let _wireframes: [WireframeInterface] = [
        HomeWireframe(),
        FavoritesWireframe(),
        SettingsWireframe()
    ]
    
    // MARK: - Public properties -
    
    weak var navigationController: UINavigationController?
    weak var viewController: UIViewController?
    
    // MARK: - Lifecycle -
    
    init(navigationController: UINavigationController? = nil, context: TabBarContext? = nil) {
        super.init()
        _context = context
        self.navigationController = navigationController
    }
    
    // MARK: - Module setup -
    
    func instantiateAndConfigureModule() -> UIViewController {
        guard let viewController = _storyboard.instantiateViewController(withIdentifier: Constants.ViewControllerIdentifiers.TabBar) as? TabBarViewController else {
            fatalError("No view controller found with the following identifier: \(Constants.ViewControllerIdentifiers.TabBar)")
        }
        
        viewController.viewControllers = _wireframes.map { $0.instantiateAndConfigureModuleWithNavigationController() }
        
        configureModuleWithViewController(viewController: viewController)
        
        return viewController
    }
    
    func configureModuleWithViewController(viewController: TabBarViewController) {
        let interactor = TabBarInteractor()
        let presenter = TabBarPresenter(wireframe: self, view: viewController, interactor: interactor)
        viewController.presenter = presenter
    }

}

// MARK: - Extensions -

extension TabBarWireframe: TabBarWireframeInterface {
    
    func performNavigationAction(action: TabBarNavigationAction) {
        switch action {
        default:
            break
        }
    }

}
