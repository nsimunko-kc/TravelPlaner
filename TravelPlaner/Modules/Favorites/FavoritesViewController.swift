//
//  FavoritesViewController.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 14/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class FavoritesViewController: UIViewController {

    // MARK: - Private properties -
    
    // MARK: - Public properties -
    
    var presenter: FavoritesPresenterInterface!

    // MARK: - IBOutlets -
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var placeholderView: UIView!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter.viewDidLoad()
        
        _configureUI()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        presenter.viewWillAppear(animated)
        
        if presenter.numberOfRows(in: 0) > 0 {
            placeholderView.isHidden = true
            tableView.isHidden = false
        } else {
            placeholderView.isHidden = false
            tableView.isHidden = true
        }
    }

    // MARK: - IBActions -

    // MARK: - Private functions -
    
    fileprivate func _configureUI() {
        navigationItem.title = "Moje lokacije"
        navigationItem.rightBarButtonItem = UIBarButtonItem(image: #imageLiteral(resourceName: "ic_plus"), style: .plain, target: self, action: #selector(_newLocationButtonTapped))
        navigationItem.rightBarButtonItem?.tintColor = UIColor.white
        navigationController?.navigationBar.barTintColor = UIColor.appLightBlue()
        navigationController?.navigationBar.titleTextAttributes = [NSForegroundColorAttributeName: UIColor.white]
    }
    
    @objc fileprivate func _newLocationButtonTapped() {
        presenter.didSelectNavigationAction(action: .newLocation)
    }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
}

// MARK: - Extensions -

extension FavoritesViewController: FavoritesViewInterface {
    
    func reloadData() {
        tableView.reloadData()
    }
    
}

extension FavoritesViewController: TabBarItemConfigurable {
    func tabBarItemTitle() -> String {
        return "Favoriti"
    }
    
    func tabBarItemDeselectedImageName() -> String {
        return "ic_star"
    }
    
    func tabBarItemSelectedImageName() -> String {
        return "ic_star"
    }
}

extension FavoritesViewController: UITableViewDataSource, UITableViewDelegate {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return presenter.numberOfSections()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.numberOfRows(in: section)
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "LocationCell", for: indexPath)
        let item = presenter.item(at: indexPath)
        
        cell.textLabel?.text = item.name
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 44.0
    }
    
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            presenter.didDeleteItem(at: indexPath)
            tableView.deleteRows(at: [indexPath], with: .fade)
        }
    }
    
}
