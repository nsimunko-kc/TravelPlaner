//
//  FavoritesPresenter.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 14/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class FavoritesPresenter: NSObject {
    
    // MARK: - Private properties -

    fileprivate weak var _view: FavoritesViewInterface?
    fileprivate var _interactor: FavoritesInteractorInterface
    fileprivate var _wireframe: FavoritesWireframeInterface
    
    fileprivate var _items = [LocationItem]()
    
    // MARK: - Lifecycle -
    
    init (wireframe: FavoritesWireframeInterface, view: FavoritesViewInterface, interactor: FavoritesInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }

    // MARK: - Private functions -
    
    fileprivate func _loadData() {
        _items.removeAll()
        if let locations = _interactor.loadLocations() {
            for location in locations {
                _items.append(LocationItem(name: location))
            }
        }
        _view?.reloadData()
    }
    
}

// MARK: - Extensions -

extension FavoritesPresenter: FavoritesPresenterInterface {
    
    func didSelectNavigationAction(action: FavoritesNavigationAction) {
        _wireframe.performNavigationAction(action: action)
    }
    
    func numberOfSections() -> Int {
        return 1
    }
    
    func numberOfRows(in section: Int) -> Int {
        return _items.count
    }
    
    func item(at indexPath: IndexPath) -> LocationItem {
        return _items[indexPath.row]
    }
    
    func didSelectItem(at indexPath: IndexPath) {
        
    }
    
    func didDeleteItem(at indexPath: IndexPath) {
        _items.remove(at: indexPath.row)
        _interactor.storeLocations(_items.map { $0.name })
    }
    
    func viewDidLoad() {
        _loadData()
    }
    
    func viewWillAppear(_ animated: Bool) {
        _loadData()
    }
    
}
