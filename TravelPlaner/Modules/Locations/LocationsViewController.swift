//
//  LocationsViewController.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 22/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class LocationsViewController: UIViewController {

    // MARK: - Private properties -
    
    // MARK: - Public properties -
    
    var presenter: LocationsPresenterInterface!

    // MARK: - IBOutlets -
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        _configureUI()
    }

    // MARK: - IBActions -

    // MARK: - Private functions -
    
    fileprivate func _configureUI() {
        navigationController?.navigationBar.tintColor = UIColor.white
        navigationItem.title = "Nova lokacija"
        
        tableView.register(UINib(nibName: "LocationsHeaderView", bundle: nil), forHeaderFooterViewReuseIdentifier: Constants.ReuseIdentifiers.HeaderViews.LocationsHeaderView)
    }
}

// MARK: - Extensions -

extension LocationsViewController: LocationsViewInterface {
    
    func reloadData() {
        tableView.reloadData()
    }
    
}

extension LocationsViewController: UITableViewDelegate, UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return presenter.numberOfSections()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.numberOfRows(in: section)
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 112.0
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        if section == 0 {
            if let headerView = tableView.dequeueReusableHeaderFooterView(withIdentifier: Constants.ReuseIdentifiers.HeaderViews.LocationsHeaderView) as? LocationsHeaderView {
                headerView.delegate = self
                return headerView
            } else {
                return nil
            }
        } else {
            return nil
        }
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        presenter.didSelectItem(at: indexPath)
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: Constants.ReuseIdentifiers.TableViewCells.FavoritesLocationCell, for: indexPath)
        let item = presenter.item(at: indexPath)
        
        cell.textLabel?.text = item.name
        
        return cell
    }
    
}

extension LocationsViewController: LocationsHeaderViewSearchDelegate {
    
    func didTapSearch(for location: String) {
        presenter.didTapSearch(for: location)
    }
    
}
