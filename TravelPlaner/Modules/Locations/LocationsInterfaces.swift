//
//  LocationsInterfaces.swift
//  TravelPlaner
//
//  Created by Nikola Simunko on 22/08/2017.
//  Copyright (c) 2017 Nikola Simunko. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Alamofire

// MARK: - Navigation -

enum LocationsNavigationAction {
}

// MARK: - Locations Wireframe Interface -

protocol LocationsWireframeInterface: WireframeInterface {
    func performNavigationAction(action: LocationsNavigationAction)
    func configureModuleWithViewController(viewController: LocationsViewController)
}

// MARK: - Locations View Interface -

protocol LocationsViewInterface: ViewInterface, Progressable {
    func reloadData()
}

// MARK: - Locations Presenter Interface -

protocol LocationsPresenterInterface: PresenterInterface {
    func didSelectNavigationAction(action: LocationsNavigationAction)
    func numberOfSections() -> Int
    func numberOfRows(in section: Int) -> Int
    func item(at indexPath: IndexPath) -> LocationItem
    func didSelectItem(at indexPath: IndexPath)
    func didTapSearch(for location: String)
}

// MARK: - Locations Interactor Interface -

protocol LocationsInteractorInterface: InteractorInterface {
    func getLocations(_ searchText: String, completion: @escaping ((Result<(OpenWeatherMapLocationsResponse)>) -> ()))
}
